<?php/** * NotifierComponent * * This component is used for sending notifications via email and saving them * to the database using a model. */class NotifierComponent extends Object{/** * The Model class to save the notification to * * @var string * @access public */	var $notificationClass = 'Notification';/** * The User foreignKey * * @var string * @access public */	var $foreignKey = 'user_id';	/** * The field to save the template html in $notificationClass * * @var string * @access public */	var $contentField = 'body';/** * Additional data to save to the model * * @var array * @access public */	var $saveData = array();	/** * Initialize component * * @param object $controller Instantiating controller * @param array $settings Default settings * @access public */	function initialize(&$controller, $settings = array()) {		$this->Controller =& $controller;		$this->_set($settings);	}/** * Sends a notification * * @param integer $to The user id * @param string $template The template to render * @return boolean Success * @access public */ 	function notify($to = null, $template = '') {		if (!$to || empty($template)) {			return false;		}				$content = $this->_render($template);		$data = array(			$this->foreignKey => $to,			$this->contentField => $content		);				if ($this->_save($data)) {			return true;		}				return false;	}/** * Saves the notification to the database to $notificationClass * * @param array $data The data to save * @return boolean Success * @access private */ 		function _save($data) {		App::import('Model', $this->notificationClass);		$Model = new $this->notificationClass();				if (!empty($this->saveData)) {			$data = array_merge($this->saveData, $data);		}				return $Model->save($data);	}/** * Renders the notification template * * @param string $template The template to render * @return string Rendered content * @access private */ 		function _render($template) {		// get view for rendering		App::import('View', 'view');				$View = new View($this->Controller, false);				$View->layout = 'notification';		$content = $View->element('notification' . DS . $template, array(), true);		$content = $View->renderLayout($content);				return $content;	}}?>